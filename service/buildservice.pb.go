// Code generated by protoc-gen-go. DO NOT EDIT.
// source: buildservice.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BuildResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildResponse) Reset()         { *m = BuildResponse{} }
func (m *BuildResponse) String() string { return proto.CompactTextString(m) }
func (*BuildResponse) ProtoMessage()    {}
func (*BuildResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_buildservice_d7ede0f1d34d253b, []int{0}
}
func (m *BuildResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildResponse.Unmarshal(m, b)
}
func (m *BuildResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildResponse.Marshal(b, m, deterministic)
}
func (dst *BuildResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildResponse.Merge(dst, src)
}
func (m *BuildResponse) XXX_Size() int {
	return xxx_messageInfo_BuildResponse.Size(m)
}
func (m *BuildResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BuildResponse proto.InternalMessageInfo

func (m *BuildResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type PushFileMessage struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Hash                 string   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushFileMessage) Reset()         { *m = PushFileMessage{} }
func (m *PushFileMessage) String() string { return proto.CompactTextString(m) }
func (*PushFileMessage) ProtoMessage()    {}
func (*PushFileMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_buildservice_d7ede0f1d34d253b, []int{1}
}
func (m *PushFileMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushFileMessage.Unmarshal(m, b)
}
func (m *PushFileMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushFileMessage.Marshal(b, m, deterministic)
}
func (dst *PushFileMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushFileMessage.Merge(dst, src)
}
func (m *PushFileMessage) XXX_Size() int {
	return xxx_messageInfo_PushFileMessage.Size(m)
}
func (m *PushFileMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PushFileMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PushFileMessage proto.InternalMessageInfo

func (m *PushFileMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PushFileMessage) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *PushFileMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type PushFileResponse struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushFileResponse) Reset()         { *m = PushFileResponse{} }
func (m *PushFileResponse) String() string { return proto.CompactTextString(m) }
func (*PushFileResponse) ProtoMessage()    {}
func (*PushFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_buildservice_d7ede0f1d34d253b, []int{2}
}
func (m *PushFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushFileResponse.Unmarshal(m, b)
}
func (m *PushFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushFileResponse.Marshal(b, m, deterministic)
}
func (dst *PushFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushFileResponse.Merge(dst, src)
}
func (m *PushFileResponse) XXX_Size() int {
	return xxx_messageInfo_PushFileResponse.Size(m)
}
func (m *PushFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PushFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PushFileResponse proto.InternalMessageInfo

func (m *PushFileResponse) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func init() {
	proto.RegisterType((*BuildResponse)(nil), "service.BuildResponse")
	proto.RegisterType((*PushFileMessage)(nil), "service.PushFileMessage")
	proto.RegisterType((*PushFileResponse)(nil), "service.PushFileResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BuildServiceClient is the client API for BuildService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BuildServiceClient interface {
	Build(ctx context.Context, opts ...grpc.CallOption) (BuildService_BuildClient, error)
	SendBuildError(ctx context.Context, in *InfoNode, opts ...grpc.CallOption) (*BuildResponse, error)
	PushFile(ctx context.Context, in *PushFileMessage, opts ...grpc.CallOption) (*PushFileResponse, error)
}

type buildServiceClient struct {
	cc *grpc.ClientConn
}

func NewBuildServiceClient(cc *grpc.ClientConn) BuildServiceClient {
	return &buildServiceClient{cc}
}

func (c *buildServiceClient) Build(ctx context.Context, opts ...grpc.CallOption) (BuildService_BuildClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BuildService_serviceDesc.Streams[0], "/service.BuildService/Build", opts...)
	if err != nil {
		return nil, err
	}
	x := &buildServiceBuildClient{stream}
	return x, nil
}

type BuildService_BuildClient interface {
	Send(*FileNode) error
	CloseAndRecv() (*BuildResponse, error)
	grpc.ClientStream
}

type buildServiceBuildClient struct {
	grpc.ClientStream
}

func (x *buildServiceBuildClient) Send(m *FileNode) error {
	return x.ClientStream.SendMsg(m)
}

func (x *buildServiceBuildClient) CloseAndRecv() (*BuildResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(BuildResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *buildServiceClient) SendBuildError(ctx context.Context, in *InfoNode, opts ...grpc.CallOption) (*BuildResponse, error) {
	out := new(BuildResponse)
	err := c.cc.Invoke(ctx, "/service.BuildService/SendBuildError", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildServiceClient) PushFile(ctx context.Context, in *PushFileMessage, opts ...grpc.CallOption) (*PushFileResponse, error) {
	out := new(PushFileResponse)
	err := c.cc.Invoke(ctx, "/service.BuildService/PushFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BuildServiceServer is the server API for BuildService service.
type BuildServiceServer interface {
	Build(BuildService_BuildServer) error
	SendBuildError(context.Context, *InfoNode) (*BuildResponse, error)
	PushFile(context.Context, *PushFileMessage) (*PushFileResponse, error)
}

func RegisterBuildServiceServer(s *grpc.Server, srv BuildServiceServer) {
	s.RegisterService(&_BuildService_serviceDesc, srv)
}

func _BuildService_Build_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BuildServiceServer).Build(&buildServiceBuildServer{stream})
}

type BuildService_BuildServer interface {
	SendAndClose(*BuildResponse) error
	Recv() (*FileNode, error)
	grpc.ServerStream
}

type buildServiceBuildServer struct {
	grpc.ServerStream
}

func (x *buildServiceBuildServer) SendAndClose(m *BuildResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *buildServiceBuildServer) Recv() (*FileNode, error) {
	m := new(FileNode)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _BuildService_SendBuildError_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoNode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServiceServer).SendBuildError(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.BuildService/SendBuildError",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServiceServer).SendBuildError(ctx, req.(*InfoNode))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildService_PushFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushFileMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServiceServer).PushFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.BuildService/PushFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServiceServer).PushFile(ctx, req.(*PushFileMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _BuildService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.BuildService",
	HandlerType: (*BuildServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendBuildError",
			Handler:    _BuildService_SendBuildError_Handler,
		},
		{
			MethodName: "PushFile",
			Handler:    _BuildService_PushFile_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Build",
			Handler:       _BuildService_Build_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "buildservice.proto",
}

func init() { proto.RegisterFile("buildservice.proto", fileDescriptor_buildservice_d7ede0f1d34d253b) }

var fileDescriptor_buildservice_d7ede0f1d34d253b = []byte{
	// 272 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0x3f, 0x4f, 0xc3, 0x30,
	0x10, 0xc5, 0x1b, 0x28, 0xb4, 0x9c, 0x0a, 0x85, 0x1b, 0x2a, 0x93, 0xa9, 0xca, 0x80, 0xc2, 0x92,
	0x01, 0x24, 0x36, 0x06, 0x2a, 0x81, 0xc4, 0x50, 0x84, 0xd2, 0x85, 0xd5, 0x4d, 0x8e, 0x24, 0x52,
	0x12, 0x07, 0x5f, 0xc2, 0x67, 0xe4, 0x63, 0x21, 0x3b, 0x38, 0xfc, 0x93, 0xba, 0xbd, 0x7b, 0xf7,
	0xf4, 0xbb, 0x3b, 0x1b, 0x70, 0xdb, 0x15, 0x65, 0xca, 0xa4, 0xdf, 0x8b, 0x84, 0xa2, 0x46, 0xab,
	0x56, 0xe1, 0xe4, 0xab, 0xf4, 0xe7, 0xa9, 0x6c, 0x65, 0xa5, 0x52, 0x2a, 0xfb, 0x4e, 0x70, 0x09,
	0xc7, 0x2b, 0x93, 0x8f, 0x89, 0x1b, 0x55, 0x33, 0xa1, 0x80, 0x09, 0x77, 0x49, 0x42, 0xcc, 0xc2,
	0x5b, 0x7a, 0xe1, 0x34, 0x76, 0x65, 0xb0, 0x86, 0xf9, 0x73, 0xc7, 0xf9, 0x43, 0x51, 0xd2, 0x9a,
	0x98, 0x65, 0x46, 0x88, 0x30, 0xae, 0x65, 0x45, 0x36, 0x79, 0x14, 0x5b, 0x6d, 0xbc, 0x5c, 0x72,
	0x2e, 0xf6, 0x7a, 0xcf, 0x68, 0xe3, 0x99, 0xc1, 0x62, 0x7f, 0xe9, 0x85, 0xb3, 0xd8, 0xea, 0xe0,
	0x02, 0x4e, 0x1d, 0x6e, 0x18, 0x8e, 0x30, 0x6e, 0x64, 0x9b, 0x3b, 0x9e, 0xd1, 0x57, 0x1f, 0x1e,
	0xcc, 0xec, 0x8a, 0x9b, 0xfe, 0x06, 0xbc, 0x81, 0x03, 0x5b, 0xe3, 0x59, 0xe4, 0xae, 0x34, 0x90,
	0x27, 0x95, 0x92, 0xbf, 0x18, 0xac, 0x5f, 0x57, 0x05, 0xa3, 0xd0, 0xc3, 0x5b, 0x38, 0xd9, 0x50,
	0x9d, 0xda, 0xc6, 0xbd, 0xd6, 0x4a, 0xff, 0x00, 0x3c, 0xd6, 0xaf, 0x6a, 0x37, 0x00, 0xef, 0x60,
	0xea, 0xf6, 0x45, 0x31, 0xa4, 0xfe, 0xbc, 0x88, 0x7f, 0xfe, 0xaf, 0xf3, 0x8d, 0x58, 0x09, 0x58,
	0x28, 0x9d, 0x45, 0x6f, 0x15, 0xb7, 0x3a, 0xca, 0x74, 0x93, 0xb8, 0xf0, 0xcb, 0x68, 0x7b, 0x68,
	0xff, 0xe3, 0xfa, 0x33, 0x00, 0x00, 0xff, 0xff, 0x86, 0xf7, 0x39, 0xdb, 0xbf, 0x01, 0x00, 0x00,
}
